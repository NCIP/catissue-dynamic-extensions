// Generated from AQL.g4 by ANTLR 4.1
package edu.common.dynamicextensions.query.antlr;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.RuleContext;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNSimulator;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class AQLLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__1=1, T__0=2, WS=3, SELECT=4, WHERE=5, MTHS_BTWN=6, YRS_BTWN=7, CURR_DATE=8, 
		OR=9, AND=10, PAND=11, NOT=12, LP=13, RP=14, MOP=15, SOP=16, EOP=17, OP=18, 
		INT=19, FLOAT=20, BOOL=21, YEAR=22, MONTH=23, DAY=24, DIGIT=25, ID=26, 
		FIELD=27, SLITERAL=28, ESC=29, ARITH_OP=30, ERROR=31, QUOTE=32;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'as'", "','", "WS", "'select'", "'where'", "'months_between'", "'years_between'", 
		"'current_date'", "'or'", "'and'", "'pand'", "'not'", "'('", "')'", "MOP", 
		"SOP", "EOP", "OP", "INT", "FLOAT", "BOOL", "YEAR", "MONTH", "DAY", "DIGIT", 
		"ID", "FIELD", "SLITERAL", "ESC", "ARITH_OP", "ERROR", "'\"'"
	};
	public static final String[] ruleNames = {
		"T__1", "T__0", "WS", "SELECT", "WHERE", "MTHS_BTWN", "YRS_BTWN", "CURR_DATE", 
		"OR", "AND", "PAND", "NOT", "LP", "RP", "MOP", "SOP", "EOP", "OP", "INT", 
		"FLOAT", "BOOL", "YEAR", "MONTH", "DAY", "DIGIT", "ID", "FIELD", "SLITERAL", 
		"ESC", "ARITH_OP", "ERROR", "SGUTS", "QUOTE"
	};


	public AQLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "AQL.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 2: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2\"\u0144\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\3\2\3\2\3\2\3\3\3\3\3\4\6\4L\n\4\r\4\16\4M\3\4\3\4\3\5\3\5"+
		"\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3"+
		"\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b"+
		"\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3"+
		"\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r"+
		"\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\5\20\u00a5"+
		"\n\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\5\21\u00c3\n\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\22\3\22\3\22\3\22\5\22\u00d5\n\22\3\23\3\23\3\23\3\23\3\23"+
		"\3\23\3\23\3\23\3\23\3\23\3\23\3\23\5\23\u00e3\n\23\3\24\5\24\u00e6\n"+
		"\24\3\24\6\24\u00e9\n\24\r\24\16\24\u00ea\3\25\5\25\u00ee\n\25\3\25\6"+
		"\25\u00f1\n\25\r\25\16\25\u00f2\3\25\3\25\6\25\u00f7\n\25\r\25\16\25\u00f8"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\5\26\u0104\n\26\3\27\6\27"+
		"\u0107\n\27\r\27\16\27\u0108\3\27\3\27\3\30\6\30\u010e\n\30\r\30\16\30"+
		"\u010f\3\30\3\30\3\31\6\31\u0115\n\31\r\31\16\31\u0116\3\31\3\31\3\32"+
		"\3\32\3\33\3\33\7\33\u011f\n\33\f\33\16\33\u0122\13\33\3\34\3\34\5\34"+
		"\u0126\n\34\3\34\3\34\3\34\3\34\7\34\u012c\n\34\f\34\16\34\u012f\13\34"+
		"\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3!\3!\7!\u013e\n!"+
		"\f!\16!\u0141\13!\3\"\3\"\2#\3\3\1\5\4\1\7\5\2\t\6\1\13\7\1\r\b\1\17\t"+
		"\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1"+
		"#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67"+
		"\35\19\36\1;\37\1= \1?!\1A\2\1C\"\1\3\2\13\5\2\13\f\17\17\"\"\4\2>>@@"+
		"\4\2[[{{\4\2OOoo\4\2FFff\5\2C\\aac|\6\2\62;C\\aac|\4\2$$^^\5\2,-//\61"+
		"\61\u015a\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2"+
		"\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2C\3\2\2\2\3E\3\2\2\2\5H\3\2\2\2"+
		"\7K\3\2\2\2\tQ\3\2\2\2\13X\3\2\2\2\r^\3\2\2\2\17m\3\2\2\2\21{\3\2\2\2"+
		"\23\u0088\3\2\2\2\25\u008b\3\2\2\2\27\u008f\3\2\2\2\31\u0094\3\2\2\2\33"+
		"\u0098\3\2\2\2\35\u009a\3\2\2\2\37\u00a4\3\2\2\2!\u00c2\3\2\2\2#\u00d4"+
		"\3\2\2\2%\u00e2\3\2\2\2\'\u00e5\3\2\2\2)\u00ed\3\2\2\2+\u0103\3\2\2\2"+
		"-\u0106\3\2\2\2/\u010d\3\2\2\2\61\u0114\3\2\2\2\63\u011a\3\2\2\2\65\u011c"+
		"\3\2\2\2\67\u0125\3\2\2\29\u0130\3\2\2\2;\u0134\3\2\2\2=\u0137\3\2\2\2"+
		"?\u0139\3\2\2\2A\u013f\3\2\2\2C\u0142\3\2\2\2EF\7c\2\2FG\7u\2\2G\4\3\2"+
		"\2\2HI\7.\2\2I\6\3\2\2\2JL\t\2\2\2KJ\3\2\2\2LM\3\2\2\2MK\3\2\2\2MN\3\2"+
		"\2\2NO\3\2\2\2OP\b\4\2\2P\b\3\2\2\2QR\7u\2\2RS\7g\2\2ST\7n\2\2TU\7g\2"+
		"\2UV\7e\2\2VW\7v\2\2W\n\3\2\2\2XY\7y\2\2YZ\7j\2\2Z[\7g\2\2[\\\7t\2\2\\"+
		"]\7g\2\2]\f\3\2\2\2^_\7o\2\2_`\7q\2\2`a\7p\2\2ab\7v\2\2bc\7j\2\2cd\7u"+
		"\2\2de\7a\2\2ef\7d\2\2fg\7g\2\2gh\7v\2\2hi\7y\2\2ij\7g\2\2jk\7g\2\2kl"+
		"\7p\2\2l\16\3\2\2\2mn\7{\2\2no\7g\2\2op\7c\2\2pq\7t\2\2qr\7u\2\2rs\7a"+
		"\2\2st\7d\2\2tu\7g\2\2uv\7v\2\2vw\7y\2\2wx\7g\2\2xy\7g\2\2yz\7p\2\2z\20"+
		"\3\2\2\2{|\7e\2\2|}\7w\2\2}~\7t\2\2~\177\7t\2\2\177\u0080\7g\2\2\u0080"+
		"\u0081\7p\2\2\u0081\u0082\7v\2\2\u0082\u0083\7a\2\2\u0083\u0084\7f\2\2"+
		"\u0084\u0085\7c\2\2\u0085\u0086\7v\2\2\u0086\u0087\7g\2\2\u0087\22\3\2"+
		"\2\2\u0088\u0089\7q\2\2\u0089\u008a\7t\2\2\u008a\24\3\2\2\2\u008b\u008c"+
		"\7c\2\2\u008c\u008d\7p\2\2\u008d\u008e\7f\2\2\u008e\26\3\2\2\2\u008f\u0090"+
		"\7r\2\2\u0090\u0091\7c\2\2\u0091\u0092\7p\2\2\u0092\u0093\7f\2\2\u0093"+
		"\30\3\2\2\2\u0094\u0095\7p\2\2\u0095\u0096\7q\2\2\u0096\u0097\7v\2\2\u0097"+
		"\32\3\2\2\2\u0098\u0099\7*\2\2\u0099\34\3\2\2\2\u009a\u009b\7+\2\2\u009b"+
		"\36\3\2\2\2\u009c\u009d\7k\2\2\u009d\u00a5\7p\2\2\u009e\u009f\7p\2\2\u009f"+
		"\u00a0\7q\2\2\u00a0\u00a1\7v\2\2\u00a1\u00a2\7\"\2\2\u00a2\u00a3\7k\2"+
		"\2\u00a3\u00a5\7p\2\2\u00a4\u009c\3\2\2\2\u00a4\u009e\3\2\2\2\u00a5 \3"+
		"\2\2\2\u00a6\u00a7\7e\2\2\u00a7\u00a8\7q\2\2\u00a8\u00a9\7p\2\2\u00a9"+
		"\u00aa\7v\2\2\u00aa\u00ab\7c\2\2\u00ab\u00ac\7k\2\2\u00ac\u00ad\7p\2\2"+
		"\u00ad\u00c3\7u\2\2\u00ae\u00af\7u\2\2\u00af\u00b0\7v\2\2\u00b0\u00b1"+
		"\7c\2\2\u00b1\u00b2\7t\2\2\u00b2\u00b3\7v\2\2\u00b3\u00b4\7u\2\2\u00b4"+
		"\u00b5\7\"\2\2\u00b5\u00b6\7y\2\2\u00b6\u00b7\7k\2\2\u00b7\u00b8\7v\2"+
		"\2\u00b8\u00c3\7j\2\2\u00b9\u00ba\7g\2\2\u00ba\u00bb\7p\2\2\u00bb\u00bc"+
		"\7f\2\2\u00bc\u00bd\7u\2\2\u00bd\u00be\7\"\2\2\u00be\u00bf\7y\2\2\u00bf"+
		"\u00c0\7k\2\2\u00c0\u00c1\7v\2\2\u00c1\u00c3\7j\2\2\u00c2\u00a6\3\2\2"+
		"\2\u00c2\u00ae\3\2\2\2\u00c2\u00b9\3\2\2\2\u00c3\"\3\2\2\2\u00c4\u00c5"+
		"\7g\2\2\u00c5\u00c6\7z\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7u\2\2\u00c8"+
		"\u00c9\7v\2\2\u00c9\u00d5\7u\2\2\u00ca\u00cb\7p\2\2\u00cb\u00cc\7q\2\2"+
		"\u00cc\u00cd\7v\2\2\u00cd\u00ce\7\"\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0"+
		"\7z\2\2\u00d0\u00d1\7k\2\2\u00d1\u00d2\7u\2\2\u00d2\u00d3\7v\2\2\u00d3"+
		"\u00d5\7u\2\2\u00d4\u00c4\3\2\2\2\u00d4\u00ca\3\2\2\2\u00d5$\3\2\2\2\u00d6"+
		"\u00e3\t\3\2\2\u00d7\u00d8\7@\2\2\u00d8\u00e3\7?\2\2\u00d9\u00da\7>\2"+
		"\2\u00da\u00e3\7?\2\2\u00db\u00e3\7?\2\2\u00dc\u00dd\7#\2\2\u00dd\u00e3"+
		"\7?\2\2\u00de\u00df\7n\2\2\u00df\u00e0\7k\2\2\u00e0\u00e1\7m\2\2\u00e1"+
		"\u00e3\7g\2\2\u00e2\u00d6\3\2\2\2\u00e2\u00d7\3\2\2\2\u00e2\u00d9\3\2"+
		"\2\2\u00e2\u00db\3\2\2\2\u00e2\u00dc\3\2\2\2\u00e2\u00de\3\2\2\2\u00e3"+
		"&\3\2\2\2\u00e4\u00e6\7/\2\2\u00e5\u00e4\3\2\2\2\u00e5\u00e6\3\2\2\2\u00e6"+
		"\u00e8\3\2\2\2\u00e7\u00e9\5\63\32\2\u00e8\u00e7\3\2\2\2\u00e9\u00ea\3"+
		"\2\2\2\u00ea\u00e8\3\2\2\2\u00ea\u00eb\3\2\2\2\u00eb(\3\2\2\2\u00ec\u00ee"+
		"\7/\2\2\u00ed\u00ec\3\2\2\2\u00ed\u00ee\3\2\2\2\u00ee\u00f0\3\2\2\2\u00ef"+
		"\u00f1\5\63\32\2\u00f0\u00ef\3\2\2\2\u00f1\u00f2\3\2\2\2\u00f2\u00f0\3"+
		"\2\2\2\u00f2\u00f3\3\2\2\2\u00f3\u00f4\3\2\2\2\u00f4\u00f6\7\60\2\2\u00f5"+
		"\u00f7\5\63\32\2\u00f6\u00f5\3\2\2\2\u00f7\u00f8\3\2\2\2\u00f8\u00f6\3"+
		"\2\2\2\u00f8\u00f9\3\2\2\2\u00f9*\3\2\2\2\u00fa\u00fb\7v\2\2\u00fb\u00fc"+
		"\7t\2\2\u00fc\u00fd\7w\2\2\u00fd\u0104\7g\2\2\u00fe\u00ff\7h\2\2\u00ff"+
		"\u0100\7c\2\2\u0100\u0101\7n\2\2\u0101\u0102\7u\2\2\u0102\u0104\7g\2\2"+
		"\u0103\u00fa\3\2\2\2\u0103\u00fe\3\2\2\2\u0104,\3\2\2\2\u0105\u0107\5"+
		"\63\32\2\u0106\u0105\3\2\2\2\u0107\u0108\3\2\2\2\u0108\u0106\3\2\2\2\u0108"+
		"\u0109\3\2\2\2\u0109\u010a\3\2\2\2\u010a\u010b\t\4\2\2\u010b.\3\2\2\2"+
		"\u010c\u010e\5\63\32\2\u010d\u010c\3\2\2\2\u010e\u010f\3\2\2\2\u010f\u010d"+
		"\3\2\2\2\u010f\u0110\3\2\2\2\u0110\u0111\3\2\2\2\u0111\u0112\t\5\2\2\u0112"+
		"\60\3\2\2\2\u0113\u0115\5\63\32\2\u0114\u0113\3\2\2\2\u0115\u0116\3\2"+
		"\2\2\u0116\u0114\3\2\2\2\u0116\u0117\3\2\2\2\u0117\u0118\3\2\2\2\u0118"+
		"\u0119\t\6\2\2\u0119\62\3\2\2\2\u011a\u011b\4\62;\2\u011b\64\3\2\2\2\u011c"+
		"\u0120\t\7\2\2\u011d\u011f\t\b\2\2\u011e\u011d\3\2\2\2\u011f\u0122\3\2"+
		"\2\2\u0120\u011e\3\2\2\2\u0120\u0121\3\2\2\2\u0121\66\3\2\2\2\u0122\u0120"+
		"\3\2\2\2\u0123\u0126\5\'\24\2\u0124\u0126\5\65\33\2\u0125\u0123\3\2\2"+
		"\2\u0125\u0124\3\2\2\2\u0126\u0127\3\2\2\2\u0127\u0128\7\60\2\2\u0128"+
		"\u012d\5\65\33\2\u0129\u012a\7\60\2\2\u012a\u012c\5\65\33\2\u012b\u0129"+
		"\3\2\2\2\u012c\u012f\3\2\2\2\u012d\u012b\3\2\2\2\u012d\u012e\3\2\2\2\u012e"+
		"8\3\2\2\2\u012f\u012d\3\2\2\2\u0130\u0131\7$\2\2\u0131\u0132\5A!\2\u0132"+
		"\u0133\7$\2\2\u0133:\3\2\2\2\u0134\u0135\7^\2\2\u0135\u0136\t\t\2\2\u0136"+
		"<\3\2\2\2\u0137\u0138\t\n\2\2\u0138>\3\2\2\2\u0139\u013a\13\2\2\2\u013a"+
		"@\3\2\2\2\u013b\u013e\5;\36\2\u013c\u013e\n\t\2\2\u013d\u013b\3\2\2\2"+
		"\u013d\u013c\3\2\2\2\u013e\u0141\3\2\2\2\u013f\u013d\3\2\2\2\u013f\u0140"+
		"\3\2\2\2\u0140B\3\2\2\2\u0141\u013f\3\2\2\2\u0142\u0143\7$\2\2\u0143D"+
		"\3\2\2\2\26\2M\u00a4\u00c2\u00d4\u00e2\u00e5\u00ea\u00ed\u00f2\u00f8\u0103"+
		"\u0108\u010f\u0116\u0120\u0125\u012d\u013d\u013f";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}